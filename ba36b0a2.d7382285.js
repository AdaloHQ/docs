(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{101:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var o=n(2),r=n(6),i=(n(0),n(116)),a={id:"control-types",title:"Control Types"},l={unversionedId:"docs/interactions/control-types",id:"docs/interactions/control-types",isDocsHomePage:!1,title:"Control Types",description:"These are some advanced properties you can add to your Adalo props to the way they look in the editor and how they interact with Adalo.",source:"@site/docs/docs/interactions/control-types.md",permalink:"/docs/interactions/control-types",lastUpdatedAt:1663330228,sidebar:"docs",previous:{title:"Child Components",permalink:"/docs/interactions/child-components"},next:{title:"Conditional Control",permalink:"/docs/interactions/conditional-control"}},c=[{value:"Prop-Type &quot;Control&quot;",id:"prop-type-control",children:[{value:"Slider",id:"slider",children:[]},{value:"Menu",id:"menu",children:[]}]},{value:"Working with Adalo Lists (Role and Reference)",id:"working-with-adalo-lists-role-and-reference",children:[]},{value:"Disabling List Controls",id:"disabling-list-controls",children:[]}],s={rightToc:c};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"These are some advanced properties you can add to your Adalo props to the way they look in the editor and how they interact with Adalo."),Object(i.b)("h2",{id:"prop-type-control"},'Prop-Type "Control"'),Object(i.b)("p",null,"You can add the key ",Object(i.b)("inlineCode",{parentName:"p"},"control")," to any Adalo prop, whose value is an object."),Object(i.b)("h3",{id:"slider"},"Slider"),Object(i.b)("p",null,"For example, if you want your number input to show up in the editor as a slider, you can add this control prop:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-json"}),'{\n  ...\n  props: [\n    {\n      "name": "rounding",\n      "displayName": "Rounding",\n      "type": "number",\n      "default": 4,\n      "control": { "type": "slider", "max": 18, "min": 0 }\n    }\n  ]\n}\n')),Object(i.b)("p",null,"Which will make the number input look like this in the editor:"),Object(i.b)("img",{src:"/img/slider.gif",alt:"Slider Example"}),Object(i.b)("p",null,"Each ",Object(i.b)("inlineCode",{parentName:"p"},"control")," object has the key ",Object(i.b)("inlineCode",{parentName:"p"},"type"),", which corresponds to the control type. The other values inside the control object differ depending on the control type."),Object(i.b)("p",null,"You can find a full list of control types in the ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/configuration/manifest-json"}),"component manifest"),", but here are a few other common control types:"),Object(i.b)("h3",{id:"menu"},"Menu"),Object(i.b)("p",null,"To make a prop show up as a dropdown menu, you can add the control type of ",Object(i.b)("inlineCode",{parentName:"p"},"menu"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-json"}),'{\n  ...\n  "props": [\n    {\n      "name": "position",\n      "displayName": "Position",\n      "type": "number",\n      "default": 1,\n      "control": {\n        "type": "menu",\n        "options": [\n          { "label": "Option 0", "value": 0 },\n          { "label": "Option 1", "value": 1 },\n          { "label": "Option 2", "value": 2 }\n        ]\n      }\n    }\n  ]\n}\n')),Object(i.b)("p",null,"Which will look like this in the editor:"),Object(i.b)("img",{src:"/img/menu.gif",alt:"Menu Example"}),Object(i.b)("h2",{id:"working-with-adalo-lists-role-and-reference"},"Working with Adalo Lists (Role and Reference)"),Object(i.b)("p",null,"One data type a prop can be is a list, and often you want other props to be able to reference the current list item. In order to do this, you must add two properties to that individual Adalo prop: ",Object(i.b)("inlineCode",{parentName:"p"},"role")," and ",Object(i.b)("inlineCode",{parentName:"p"},"reference"),". See the example below:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-json"}),'{\n    ...\n    "props": [\n        {\n            "name": "listProp",\n            "displayName": "What is this a list of?",\n            "type": "list"\n        },\n        {\n            "name": "listItemAction",\n            "displayName": "Click actions on list item",\n            "type": "action",\n            "role": "listItem",\n            "reference": "listProp"\n        }\n    ]\n}\n')),Object(i.b)("p",null,"In order to access the current list item as magic text within the action, you must specify both ",Object(i.b)("inlineCode",{parentName:"p"},"role")," and ",Object(i.b)("inlineCode",{parentName:"p"},"reference"),".\n",Object(i.b)("inlineCode",{parentName:"p"},"role")," should be set to ",Object(i.b)("inlineCode",{parentName:"p"},"listItem"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"reference")," should be set to the name of the list property, in this case ",Object(i.b)("inlineCode",{parentName:"p"},'"listProp"'),"."),Object(i.b)("p",null,"You can find more information about this in the ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/configuration/manifest-json#role"}),"component manifest")," documentation."),Object(i.b)("h2",{id:"disabling-list-controls"},"Disabling List Controls"),Object(i.b)("p",null,"Makers have access to a number of controls when working with lists. If you wish to disable any of these controls, that can be done by adding the ",Object(i.b)("inlineCode",{parentName:"p"},"listControl")," prop to your ",Object(i.b)("inlineCode",{parentName:"p"},"manifest.json")," file. All list controls will default to being visible unless specified otherwise. Below is an example of how you can disable the option for a user to sort and filter the items in a list:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-json"}),'{\n  ...\n  props: [\n    {\n      "name": "listItems",\n      "displayName": "Select list items",\n      "type": "list",\n      "listControl": {"sort": false, "filter": false},\n    }\n  ],\n}\n')),Object(i.b)("p",null,"This will change the editor from its default appearance:"),Object(i.b)("img",{src:"/img/Default-List-Control.png"}),Object(i.b)("p",null,"To this, where the ",Object(i.b)("inlineCode",{parentName:"p"},"sort")," and ",Object(i.b)("inlineCode",{parentName:"p"},"filter")," controls have been disabled:"),Object(i.b)("img",{src:"/img/List-Control-Filter&Sort-Disabled.png"}),Object(i.b)("p",null,"You can find more information about the ",Object(i.b)("inlineCode",{parentName:"p"},"listControl")," prop and the different list controls in the ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/configuration/manifest-json#listcontrol"}),"component manifest")," documentation."))}p.isMDXComponent=!0},116:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var o=n(0),r=n.n(o);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(n),u=o,m=d["".concat(a,".").concat(u)]||d[u]||b[u]||i;return n?r.a.createElement(m,l(l({ref:t},s),{},{components:n})):r.a.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);